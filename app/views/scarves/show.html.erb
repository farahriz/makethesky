<p id="notice"><%= notice %></p>

<p>
  <strong>Title:</strong>
  <%= @scarf.title %>
</p>

<p>
  <strong>Description:</strong>
  <%= @scarf.description %>
</p>

<p>
  <strong>Made by:</strong>
  <%= @scarf.user.email %>
</p>

<p>
  <strong>City inspiration:</strong>
  <%= @scarf.city.city_name %>
</p>

<p>
  <strong>Date inspiration:</strong>
  <%= @scarf.date_insp %>
</p>

<p>
  <strong>Weather inspiration:</strong>
  <%= @scarf.weather_insp %>
</p>

<p>
  <strong>Pattern:</strong>
  <span id="refPat"><%= @scarf.pattern %></span>
</p>

  <div>
    <canvas id="scarfCanvas" width="720" height="120"></canvas>
  </div>

<% if current_user == @scarf.user %>
<div class="container">
  <div class="row">
    <div class="col-sm-6 border border-danger rounded">
      <h5>Customise colour scheme</h5>
      <form id="pallete-maker" class="border border-secondary rounded">
        <div class="form-group ">
          <label for="baseColor" class="col-sm-3 col-form-label">Select a main colour:</label>
          <input type="color" name="baseColor" value="#29339B" id="baseColor">
          <button id="gen-random-col">Get random color</button>
        </div>
        <div class="form-group">
          <label for="palleteNum" class="col-sm-3">Select number of colours:</label>
          <div class="text-center font-weight-bold" id="display-pallete-num"></div>
          <input type="range" name="palleteNum" min="3" max="8" value="5" class="slider" id="palleteNum">
        </div>
        <div class="form-inline">
          <label for="schemeType" class="col-sm-3">Select colour scheme type:</label>
          <select class="form-control" id="schemeType">
            <option value="monochrome">Monochrome</option>
            <option value="monochrome-dark">Dark monochrome</option>
            <option value="monochrome-light">Light monochrome</option>
            <option value="analogic">Analogic</option>
            <option value="complement">Complementary</option>
            <option value="analogic-complement">Analogic-complementary</option>
            <option value="triad">Triad</option>
            <option value="quad">Quad</option>
          </select>
        </div>            
        <button type="submit" class="btn btn-secondary">Get colour scheme</button>
      </form>
    </div>

    <div class="col-sm-6 border border-secondary rounded">
      <h5>Preview colour scheme</h5>
    </div>
  </div>
</div>
<% end %>


<script>
  var slider = document.getElementById("palleteNum");
  var output = document.getElementById("display-pallete-num");
  output.innerHTML = slider.value;

  slider.oninput = function() {
    output.innerHTML = this.value;
  }

  function getRandomHex() {
    var letters = '0123456789ABCDEF'.split('');
    var color = '#';
    for (var i = 0; i < 6; i++ ) {
      color += letters[Math.floor(Math.random() * 16)];
    }
    return color;
  }

  $('#gen-random-col').click(function(){
    event.preventDefault();
    $('#baseColor').val(getRandomHex())
  })

</script>

<script>
  var canvas = document.getElementById('scarfCanvas');
  var canvasContext = canvas.getContext('2d');

  let referenceArray = $('#refPat').html().slice(1,-1).replace(/"/g, "").split(',')

  let highRef = Math.max(...referenceArray);
  let lowRef = Math.min(...referenceArray);
  let range = highRef - lowRef
  let patternMatch = [lowRef, lowRef + range/5, lowRef + 2*range/5, lowRef + 3*range/5, highRef]

  let colorPallete = ['#29339B', '#74A4BC', '#B6D6CC', '#F1FEC6', '#FF3A20']

  function colorRect(leftX, topY, width, height, drawColor){
    canvasContext.fillStyle = drawColor;
    canvasContext.fillRect(leftX, topY, width, height);
  }

  for (var i = 0 ; i < 24; i++) {
    if(referenceArray[i] > patternMatch[4] ){
      colorRect(i * canvas.width/24, 0,canvas.width/24,canvas.height, colorPallete[0])
    } else if(referenceArray[i] > patternMatch[3] ){
      colorRect(i * canvas.width/24, 0,canvas.width/24,canvas.height, colorPallete[4])
    } else if(referenceArray[i] > patternMatch[2] ){
      colorRect(i * canvas.width/24, 0,canvas.width/24,canvas.height, colorPallete[2])
    } else if(referenceArray[i] > patternMatch[1] ){
      colorRect(i * canvas.width/24, 0,canvas.width/24,canvas.height, colorPallete[3])
    } else {
      colorRect(i * canvas.width/24, 0,canvas.width/24,canvas.height, colorPallete[1])
    }
  }

</script>

<%= link_to 'Edit', edit_scarf_path(@scarf) %> |
<%= link_to 'Back', scarves_path %>
